{"version":3,"sources":["components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistic.js","components/Section/Section.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","options","this","props","Object","keys","map","option","className","styles","good","neutral","bad","type","onClick","onLeaveFeedback","value","React","Component","Statistic","total","positiveFeedback","defaultProps","Section","container","title","children","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","target","currentTarget","dataset","setState","prevState","isFeedback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,UAAY,6B,mBCA9BD,EAAOC,QAAU,CAAC,UAAY,kC,kKCGxBC,E,4JAOF,WAAS,IAAD,OACEC,EAAUC,KAAKC,MAAMF,QAE3B,OACI,8BACKG,OAAOC,KAAKJ,GAASK,KAAI,SAAAC,GAAM,OAChC,wBAAQC,UAAsB,SAAXD,EAAoBE,IAAOC,KAAkB,YAAXH,EAAuBE,IAAOE,QAAUF,IAAOG,IACpGC,KAAK,SAELC,QAAS,EAAKX,MAAMY,gBACpBC,MAAOT,EACP,cAAaA,EALb,SAMEA,GAJGA,Y,GAfSU,IAAMC,WAyBrBlB,IC1BTmB,E,4JAkBF,WACI,OACA,gCACQ,wCAAWjB,KAAKC,MAAMO,KAAtB,OACA,0CAAaR,KAAKC,MAAMQ,WACxB,sCAAST,KAAKC,MAAMS,OACpB,mDAAsBV,KAAKC,MAAMiB,SACjC,mDAAsBlB,KAAKC,MAAMkB,iBAAjC,c,GAzBQJ,IAAMC,WAAxBC,EAEKG,aAAe,CAClBZ,KAAO,EACPC,QAAU,EACVC,IAAM,EACNQ,MAAQ,EACRC,iBAAmB,GAwBZF,Q,iBC9BTI,E,4JAMN,WAEI,OACI,sBAAKf,UAAWC,IAAOe,UAAvB,UACI,6BAAKtB,KAAKC,MAAMsB,QACfvB,KAAKC,MAAMuB,gB,GAXFT,IAAMC,WAiBbK,I,iBCjBTI,E,4JAKF,WACI,OACI,mCACA,oBAAInB,UAAWC,IAAOe,UAAtB,SAAkCtB,KAAKC,MAAMyB,gB,GAR9BX,IAAMC,WAalBS,ICXTE,E,4MAENC,MAAM,CACEpB,KAAO,EACPC,QAAU,EACVC,IAAM,G,EAGVmB,mBAAqB,WAEnB,OAAO,EAAKD,MAAMpB,KAAO,EAAKoB,MAAMnB,QAAU,EAAKmB,MAAMlB,K,EAG3DoB,gCAAkC,WAC9B,MAA6B,EAAKF,MAA3BpB,EAAP,EAAOA,KACDU,EAAQV,EADd,EAAaC,QAAb,EAAsBC,IAEtB,OAAOQ,EAAQa,KAAKC,MAAMxB,EAAKU,EAAM,KAAO,G,EAG/CL,gBAAkB,SAACoB,GAChB,IAAQ5B,EAAW4B,EAAOC,cAAcC,QAAhC9B,OACR,EAAK+B,UAAS,SAAAC,GACZ,OAAO,eAAGhC,EAASgC,EAAUhC,GAAU,O,4CAM/C,WACE,IAAMa,EAAQlB,KAAK6B,qBACbV,EAAmBnB,KAAK8B,kCACxBQ,EAAapB,EAAQ,EAC3B,OACE,gCACE,cAAC,EAAD,CAASK,MAAM,gCAAf,SACA,cAAC,EAAD,CAAiBxB,QAASC,KAAK4B,MAAOf,gBAAiBb,KAAKa,oBAE3DyB,EACD,cAAC,EAAD,CAASf,MAAM,gBAAf,SACA,cAAC,EAAD,CAAWf,KAAMR,KAAK4B,MAAMpB,KAAMC,QAAST,KAAK4B,MAAMnB,QAClDC,IAAKV,KAAK4B,MAAMlB,IAAKQ,MAAOA,EAAOC,iBAAkBA,MAE1D,cAAC,EAAD,CAAcO,QAAQ,iC,GA1CXX,IAAMC,WAkDTW,IC5CAY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfA3C,EAAOC,QAAU,CAAC,eAAiB,wCAAwC,IAAM,6BAA6B,QAAU,iCAAiC,KAAO,iC","file":"static/js/main.4d49a660.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3j0PV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__1wtlE\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"components/FeedbackOptions/FeedbackOptions.module.css\"\r\n\r\nclass FeedbackOptions extends React.Component{\r\n\r\n    static propTypes = {\r\n        options : PropTypes.array,\r\n        onLeaveFeedback : PropTypes.func\r\n            };\r\n\r\n    render(){\r\n        const options = this.props.options;\r\n\r\n        return(\r\n            <div>\r\n                {Object.keys(options).map(option => (\r\n                <button className={option === 'good' ? styles.good : option === 'neutral' ? styles.neutral : styles.bad} \r\n                type=\"button\"\r\n                key={option} \r\n                onClick={this.props.onLeaveFeedback}\r\n                value={option}\r\n                data-option={option}\r\n                >{option}</button>))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Statistic extends React.Component {\r\n\r\n    static defaultProps = {\r\n        good : 0,\r\n        neutral : 0,\r\n        bad : 0,\r\n        total : 0,\r\n        positiveFeedback : 0\r\n    };\r\n\r\n    static propTypes = {\r\n        good : PropTypes.number,\r\n        neutral : PropTypes.number,\r\n        bad : PropTypes.number,\r\n        total : PropTypes.number,\r\n        positiveFeedback : PropTypes.number\r\n            };\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n                <p> Good: {this.props.good} </p>\r\n                <p>Neutral: {this.props.neutral}</p>\r\n                <p>Bad: {this.props.bad}</p>\r\n                <p>Total feedbacks : {this.props.total}</p>\r\n                <p>Positive feedback {this.props.positiveFeedback}%</p>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Statistic;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Section.module.css\"\r\n\r\nclass Section extends React.Component{\r\n     static propTypes = {\r\n         title : PropTypes.string,\r\n         children : PropTypes.node.isRequired\r\n     }\r\n\r\nrender(){\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            <h2>{this.props.title}</h2>\r\n            {this.props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Notification.module.css\"\r\n\r\nclass Notification extends React.Component{\r\n    static propTypes = {\r\n        message : PropTypes.string\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <h3 className={styles.container}>{this.props.message}</h3>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default Notification;","import FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\"\nimport React from \"react\";\nimport Statistic from \"components/Statistics/Statistic\";\nimport Section from \"components/Section/Section\";\nimport Notification from \"components/Notification/Notification\";\n\nclass App extends React.Component {\n\nstate={\n        good : 0,\n        neutral : 0,\n        bad : 0\n    };\n\n    countTotalFeedback = () => {\n      //const {good, neutral, bad} = this.state; \n      return this.state.good + this.state.neutral + this.state.bad;\n    };\n\n    countPositiveFeedbackPercentage = () => {\n        const {good, neutral, bad} = this.state;\n        const total = good + neutral + bad;\n        return total ? Math.round(good/total*100) : 0;\n\n    }\n     onLeaveFeedback = (target) => {\n        const { option } = target.currentTarget.dataset;\n        this.setState(prevState => {\n          return { [option]: prevState[option] + 1 };\n        });\n\n     }\n\n\n  render(){ \n    const total = this.countTotalFeedback();\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\n    const isFeedback = total > 0;\n    return (\n      <div>\n        <Section title=\"Please leave your feedback : \">\n        <FeedbackOptions options={this.state} onLeaveFeedback={this.onLeaveFeedback}/>\n        </Section>\n        {isFeedback ? (\n        <Section title=\"Statistics : \">\n        <Statistic good={this.state.good} neutral={this.state.neutral} \n            bad={this.state.bad} total={total} positiveFeedback={positiveFeedback}/>              \n      </Section>) : \n      (<Notification message=\"No feedback given yet\"/>)}\n      </div>\n    );\n  }\n \n \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackButton\":\"FeedbackOptions_feedbackButton__2Lr9T\",\"bad\":\"FeedbackOptions_bad__1Ow7m\",\"neutral\":\"FeedbackOptions_neutral__2RR0N\",\"good\":\"FeedbackOptions_good__1MrQp\"};"],"sourceRoot":""}